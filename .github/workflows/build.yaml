name: Build and Release for Multiple Platforms and Architectures

on:
  push:
    branches:
      - release  # 仅当推送代码到 release 分支时触发

env:
  VERSION: "0.0.1-alpha"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [x64, arm64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Executive
        run: |
          pyside6-deploy --name AirCursor
          ls -R ./  # 调试信息

      - name: Upload Artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build-output-macos-${{ matrix.arch }}
          path: |
            ./*.app

      - name: Upload Artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build-output-linux-${{ matrix.arch }}
          path: |
            ./*.bin

      - name: Upload Artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: build-output-windows-${{ matrix.arch }}
          path: |
            ./*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/release')  # 仅在 release 分支上执行
        with:
          tag_name: ${{ env.VERSION }}
          name: Release ${{ env.VERSION }}
          body: |
            This is a release for version ${{ env.VERSION }}.
          draft: true  # 将发布设置为草稿
          files: |
            artifacts/build-output-macos-x64/*.app
            artifacts/build-output-macos-arm64/*.app
            artifacts/build-output-linux-x64/*.bin
            artifacts/build-output-linux-arm64/*.bin
            artifacts/build-output-windows-x64/*.exe
            artifacts/build-output-windows-arm64/*.exe
